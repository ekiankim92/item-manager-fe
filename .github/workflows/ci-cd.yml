name: Docker Image CI-CD

on:
  push:
    branches: ['develop']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build the Docker image
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: youngjins/item-manager-fe:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64/v8
      - name: run script ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            sudo docker stop item-manager-fe
            sudo docker rm item-manager-fe
            sudo docker run --name item-manager-fe -d -p 3000:80 --pull=always --add-host=host.docker.internal:180.70.68.30 youngjins/item-manager-fe:latest

  ## discord
  action-discord:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        uses: sarisia/actions-status-discord@v1.12.0
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          status: ${{ job.status }}
        if: always()
